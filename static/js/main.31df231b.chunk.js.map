{"version":3,"sources":["fonts/Gilroy-Bold.ttf","components/MainContent.js","components/NavBar.js","i18n.js","components/LanguageTopHeader.js","pages/Home.js","components/LoadingButton.js","components/Callback.js","AIOptions/index.js","components/ProductUserInput.js","pages/Product.js","components/AboutBody.js","pages/About.js","components/App.js","serviceWorkerRegistration.js","index.js","images/homegood.png","images/logo2.png","images/world.png","components/spinner.gif","images/about-1.jpg"],"names":["module","exports","__webpack_require__","p","MainContent","t","useTranslation","keyPrefix","React","createElement","className","class","type","placeholder","src","headerLogo","alt","NavBar","props","_useState","useState","_useState2","_slicedToArray","toggleNav","setToggleNav","styles","nav","href","id","logo","onClick","Link","to","navLocation","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","LanguageTopHeader","_ref","selected","setSelected","isActive","setIsActive","options","handleLanguage","lang","changeLanguage","foo","e","map","option","Home","LanguageBar","LoadingButton","loading","Spinner","Translation","result","console","log","length","cols","rows","autoFocus","arrayStrictness","name","description","form","model","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","ProductUserInput","configuration","Configuration","apiKey","openai","OpenAIApi","setOption","_useState3","_useState4","motiveInput","setMotiveInput","_useState5","_useState6","pastInput","setPastInput","_useState7","_useState8","currentInput","setCurrentInput","_useState9","_useState10","strictnessInput","setStrictnessInput","_useState11","_useState12","situationCheck","setSituationCheck","_useState13","_useState14","psychologyCheck","setPsychologyCheck","_useState15","_useState16","planCheck","setPlanCheck","_useState17","_useState18","setIsInputFull","_useState19","_useState20","setLoading","_useState21","_useState22","setResult","doStuff","_asyncToGenerator","_callee","finalTypes","input","outputTypes","response","_context","languages","join","_objectSpread","prompt","createCompletion","data","choices","text","apply","arguments","required","onChange","target","Button","Callback","Product","sticky","AboutBody","toggleTab","setToggleTab","Fragment","mainImage","About","App","Router","Routes","Route","path","element","Boolean","window","location","hostname","match","ReactDOM","render","Suspense","fallback","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"yHAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6KCMzB,SAASC,IAAc,IAC1BC,EAAMC,YAAe,cAAe,CAAEC,UAAW,SAAjDF,EAER,OACIG,IAAAC,cAAA,WAASC,UAAU,SACfF,IAAAC,cAAA,OAAKC,UAAU,OACXF,IAAAC,cAAA,OAAKC,UAAU,eACXF,IAAAC,cAAA,OAAKC,UAAU,eACXF,IAAAC,cAAA,MAAIC,UAAU,SAASL,EAAE,SACzBG,IAAAC,cAAA,KAAGC,UAAU,SAASL,EAAE,iBAE5BG,IAAAC,cAAA,OAAKE,MAAM,SACPH,IAAAC,cAAA,QAAMC,UAAU,QACZF,IAAAC,cAAA,SACIG,KAAK,OACLC,YAAaR,EAAE,SACfK,UAAU,gBAEdF,IAAAC,cAAA,UAAQC,UAAU,gBACbL,EAAE,aAIfG,IAAAC,cAAA,OAAKE,MAAM,SAASN,EAAE,YAE1BG,IAAAC,cAAA,OAAKC,UAAU,UACXF,IAAAC,cAAA,OAAKC,UAAU,cACXF,IAAAC,cAAA,OAAKK,IAAKC,IAAYL,UAAU,YAAYM,IAAI,+CCAzDC,MA3Bf,SAAgBC,GAAO,IACXb,EAAMC,YAAe,cAAe,CAAEC,UAAW,QAAjDF,EAACc,EAE2BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA3CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAE3B,OACIb,IAAAC,cAAA,WACID,IAAAC,cAAA,OAAKC,UAAWe,IAAOC,KACnBlB,IAAAC,cAAA,KAAGkB,KAAK,KACJnB,IAAAC,cAAA,OAAKmB,GAAG,WAAWd,IAAKe,IAAMb,IAAI,MAEtCR,IAAAC,cAAA,WACID,IAAAC,cAAA,MAAImB,GAAG,SAASlB,UAAWa,EAAY,iBAAmB,UAAWO,QAAU,kBAAMN,GAAcD,KAC/Ff,IAAAC,cAAA,UAAID,IAAAC,cAACsB,IAAI,CAACC,GAAG,IAAItB,UAAiC,IAAtBQ,EAAMe,YAAoB,SAAW,eAAgB5B,EAAE,UACnFG,IAAAC,cAAA,UAAID,IAAAC,cAACsB,IAAI,CAACC,GAAG,WAAWtB,UAAiC,IAAtBQ,EAAMe,YAAoB,SAAW,eAAiB5B,EAAE,aAC3FG,IAAAC,cAAA,UAAID,IAAAC,cAACsB,IAAI,CAACC,GAAG,SAAStB,UAAiC,IAAtBQ,EAAMe,YAAoB,SAAW,eAAiB5B,EAAE,aAGjGG,IAAAC,cAAA,OAAKmB,GAAG,SAASE,QAAU,kBAAMN,GAAcD,KAC3Cf,IAAAC,cAAA,KAAGmB,GAAG,MAAMlB,UAAWa,EAAY,eAAiB,6DChB5EW,IAIGC,IAAIC,KAGJD,IAAIE,KAEJF,IAAIG,KAGJC,KAAK,CACJC,YAAa,KACbC,OAAO,EAEPC,cAAe,CACbC,aAAa,KAKJT,QAAI,ECzBJ,SAASU,EAAiBC,GAA0B,IAAxBC,EAAQD,EAARC,SAAUC,EAAWF,EAAXE,YACzC1C,EAAKC,YAAe,cAAe,CAAEC,UAAW,oBAAhDF,EAACc,EAEuBC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAxC6B,EAAQ3B,EAAA,GAAE4B,EAAW5B,EAAA,GACtB6B,EAAU,CAAC7C,EAAE,WAAYA,EAAE,eAEjC,SAAS8C,EAAeC,GACpBlB,EAAKmB,eAAeD,GACpBF,EAAQI,IAAM,CAACjD,EAAE,WAAYA,EAAE,eAGnC,OACIG,IAAAC,cAAA,OAAKC,UAAU,gBACXF,IAAAC,cAAA,OAAKC,UAAU,YACXF,IAAAC,cAAA,OAAKC,UAAU,eAAeoB,QAAS,SAACyB,GAAC,OAAKN,GAAaD,KACvDxC,IAAAC,cAAA,OAAKC,UAAU,SAASI,IAAKC,IAAYC,IAAI,KAC7CR,IAAAC,cAAA,OAAKC,UAAU,cACVL,EAAEyC,GACHtC,IAAAC,cAAA,KAAGC,UAAU,6BAGpBsC,GACGxC,IAAAC,cAAA,OAAKC,UAAU,oBACVwC,EAAQM,IAAI,SAACC,GAAM,OAChBjD,IAAAC,cAAA,OAAKqB,QAAS,SAACyB,GACXN,GAAY,GACZF,EAAYU,GACiCN,EAAlC,YAAXM,GAAmC,eAAXA,EAAoC,KAAuB,OAE1F/C,UAAU,iBACV+C,QClBVC,MAbf,SAAab,GAA0B,IAAxBC,EAAQD,EAARC,SAAUC,EAAWF,EAAXE,YAErB,OACQvC,IAAAC,cAAA,WACID,IAAAC,cAACkD,EAAW,CAACb,SAAUA,EAAUC,YAAaA,IAC9CvC,IAAAC,cAACQ,EAAM,CACHgB,YAAa,IAEjBzB,IAAAC,cAACL,EAAW,gDCGbwD,EAZO,SAAHf,GAA6B,IAAvBgB,EAAOhB,EAAPgB,QAAS/B,EAAOe,EAAPf,QACtBzB,EAAMC,YAAe,cAAe,CAAEC,UAAW,YAAjDF,EAER,OACIG,IAAAC,cAAA,UAAQqB,QAASA,EAASpB,UAAU,0BAE5BmD,EAAUrD,IAAAC,cAAA,OAAKK,IAAKgD,IAAS9C,IAAI,YAAeX,EAAE,UAAa,MCRhE,SAAS0D,EAAWlB,GAAa,IAAVmB,EAAMnB,EAANmB,OAElC,OADAC,QAAQC,IAAIF,GAERxD,IAAAC,cAAA,WACKuD,EAAOG,OAAS,GACb3D,IAAAC,cAAA,YACIC,UAAU,YACV0D,KAAM,GACNC,KAAM,GACNC,WAAS,GACXN,EAAOG,OAAS,EAAIH,EAAS,iBCZlCO,EAAkB,CAC3B,CACEC,KAAM,UACN5C,GAAI,UACJ6C,YAAa,+CACbC,KAAM,CACJC,MAAO,mBACPC,YAAa,EACbC,WAAY,IACZC,MAAO,EACPC,kBAAmB,EACnBC,iBAAkB,IAGtB,CACER,KAAM,SACN5C,GAAI,SACJ6C,YAAa,4CACbC,KAAM,CACJC,MAAO,mBACPC,YAAa,EACbC,WAAY,IACZC,MAAO,EACPC,kBAAmB,EACnBC,iBAAkB,IAGtB,CACER,KAAM,WACN5C,GAAI,WACJ6C,YAAa,mDACbC,KAAM,CACJC,MAAO,mBACPC,YAAa,EACbC,WAAY,IACZC,MAAO,EACPC,kBAAmB,EACnBC,iBAAkB,2BCpC1BC,EAAA,kBAAAhF,GAAA,IAAAA,EAAA,GAAAiF,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAA3G,KAAA,SAAA2G,IAAAD,EAAAE,KAAAhC,EAAA+B,IAAA,MAAAf,GAAA,OAAA5F,KAAA,QAAA2G,IAAAf,IAAAvG,EAAAwG,OAAA,IAAAgB,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,EAAA,kBAAA+B,OAAA,IAAAC,EAAA3C,OAAA4C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA9C,GAAAG,EAAAmC,KAAAQ,EAAAlC,KAAA8B,EAAAI,GAAA,IAAAE,EAAAP,EAAAvC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAW,GAAA,SAAAO,EAAA/C,GAAA,0BAAAgD,QAAA,SAAAC,GAAAjC,EAAAhB,EAAAiD,EAAA,SAAAd,GAAA,OAAAM,KAAAS,QAAAD,EAAAd,OAAA,SAAAgB,EAAAvB,EAAAwB,GAAA,IAAAC,EAAAlD,EAAAsC,KAAA,WAAAlC,MAAA,SAAA0C,EAAAd,GAAA,SAAAmB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAd,EAAAoB,EAAAC,GAAA,IAAAE,EAAAzB,EAAAL,EAAAqB,GAAArB,EAAAO,GAAA,aAAAuB,EAAAlI,KAAA,KAAAoD,EAAA8E,EAAAvB,IAAA5B,EAAA3B,EAAA2B,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAmC,KAAA7B,EAAA,WAAA6C,EAAAG,QAAAhD,EAAAoD,SAAAC,KAAA,SAAArD,GAAAkD,EAAA,OAAAlD,EAAAgD,EAAAC,IAAA,SAAApC,GAAAqC,EAAA,QAAArC,EAAAmC,EAAAC,KAAAJ,EAAAG,QAAAhD,GAAAqD,KAAA,SAAAC,GAAAjF,EAAA2B,MAAAsD,EAAAN,EAAA3E,IAAA,SAAAkF,GAAA,OAAAL,EAAA,QAAAK,EAAAP,EAAAC,OAAAE,EAAAvB,KAAAsB,CAAAR,EAAAd,EAAAoB,EAAAC,KAAA,OAAAH,MAAAO,KAAAN,YAAA,SAAAtB,EAAAV,EAAAE,EAAAM,GAAA,IAAAiC,EAAA,iCAAAd,EAAAd,GAAA,iBAAA4B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAd,EAAA,MAAAd,EAAA,OAAA8B,IAAA,IAAAnC,EAAAmB,SAAAnB,EAAAK,QAAA,KAAA+B,EAAApC,EAAAoC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAApC,GAAA,GAAAqC,EAAA,IAAAA,IAAA9B,EAAA,gBAAA8B,GAAA,YAAArC,EAAAmB,OAAAnB,EAAAuC,KAAAvC,EAAAwC,MAAAxC,EAAAK,SAAA,aAAAL,EAAAmB,OAAA,uBAAAc,EAAA,MAAAA,EAAA,YAAAjC,EAAAK,IAAAL,EAAAyC,kBAAAzC,EAAAK,SAAA,WAAAL,EAAAmB,QAAAnB,EAAA0C,OAAA,SAAA1C,EAAAK,KAAA4B,EAAA,gBAAAL,EAAAzB,EAAAX,EAAAE,EAAAM,GAAA,cAAA4B,EAAAlI,KAAA,IAAAuI,EAAAjC,EAAA2C,KAAA,6BAAAf,EAAAvB,MAAAE,EAAA,gBAAA9B,MAAAmD,EAAAvB,IAAAsC,KAAA3C,EAAA2C,MAAA,UAAAf,EAAAlI,OAAAuI,EAAA,YAAAjC,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAuB,EAAAvB,OAAA,SAAAiC,EAAAF,EAAApC,GAAA,IAAA4C,EAAA5C,EAAAmB,SAAAiB,EAAAvD,SAAA+D,GAAA,QAAAC,IAAA1B,EAAA,OAAAnB,EAAAoC,SAAA,eAAAQ,GAAAR,EAAAvD,SAAAiE,SAAA9C,EAAAmB,OAAA,SAAAnB,EAAAK,SAAAwC,EAAAP,EAAAF,EAAApC,GAAA,UAAAA,EAAAmB,SAAA,WAAAyB,IAAA5C,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAA0C,UAAA,oCAAAH,EAAA,aAAArC,EAAA,IAAAqB,EAAAzB,EAAAgB,EAAAiB,EAAAvD,SAAAmB,EAAAK,KAAA,aAAAuB,EAAAlI,KAAA,OAAAsG,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAuB,EAAAvB,IAAAL,EAAAoC,SAAA,KAAA7B,EAAA,IAAAyC,EAAApB,EAAAvB,IAAA,OAAA2C,IAAAL,MAAA3C,EAAAoC,EAAAa,YAAAD,EAAAvE,MAAAuB,EAAAkD,KAAAd,EAAAe,QAAA,WAAAnD,EAAAmB,SAAAnB,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAwC,GAAA7C,EAAAoC,SAAA,KAAA7B,GAAAyC,GAAAhD,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAA0C,UAAA,oCAAA/C,EAAAoC,SAAA,KAAA7B,GAAA,SAAA6C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA1C,KAAAgD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA1B,EAAA0B,EAAAQ,YAAA,GAAAlC,EAAAlI,KAAA,gBAAAkI,EAAAvB,IAAAiD,EAAAQ,WAAAlC,EAAA,SAAA3B,EAAAN,GAAAgB,KAAAgD,WAAA,EAAAJ,OAAA,SAAA5D,EAAAuB,QAAAkC,EAAAzC,WAAAoD,OAAA,YAAAhD,EAAAiD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAApF,GAAA,GAAAqF,EAAA,OAAAA,EAAA3D,KAAA0D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAA/G,QAAA,KAAAkH,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAA/G,QAAA,GAAAkB,EAAAmC,KAAA0D,EAAAG,GAAA,OAAAjB,EAAAzE,MAAAuF,EAAAG,GAAAjB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAzE,WAAAoE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA1D,WAAAoE,EAAAF,MAAA,UAAAnC,EAAAtC,UAAAuC,EAAApC,EAAA2C,EAAA,eAAAvC,MAAAgC,EAAArB,cAAA,IAAAf,EAAAoC,EAAA,eAAAhC,MAAA+B,EAAApB,cAAA,IAAAoB,EAAA4D,YAAAlF,EAAAuB,EAAAzB,EAAA,qBAAAjG,EAAAsL,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA/D,GAAA,uBAAA+D,EAAAH,aAAAG,EAAAjH,QAAAvE,EAAA0L,KAAA,SAAAH,GAAA,OAAArG,OAAAyG,eAAAzG,OAAAyG,eAAAJ,EAAA7D,IAAA6D,EAAAK,UAAAlE,EAAAvB,EAAAoF,EAAAtF,EAAA,sBAAAsF,EAAApG,UAAAD,OAAA8B,OAAAiB,GAAAsD,GAAAvL,EAAA6L,MAAA,SAAAvE,GAAA,OAAAwB,QAAAxB,IAAAY,EAAAI,EAAAnD,WAAAgB,EAAAmC,EAAAnD,UAAAY,EAAA,kBAAA6B,OAAA5H,EAAAsI,gBAAAtI,EAAA8L,MAAA,SAAArF,EAAAC,EAAAC,EAAAC,EAAA2B,QAAA,IAAAA,MAAAwD,SAAA,IAAAC,EAAA,IAAA1D,EAAA9B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA2B,GAAA,OAAAvI,EAAAsL,oBAAA5E,GAAAsF,IAAA7B,OAAApB,KAAA,SAAAhF,GAAA,OAAAA,EAAA6F,KAAA7F,EAAA2B,MAAAsG,EAAA7B,UAAAjC,EAAAD,GAAA9B,EAAA8B,EAAAhC,EAAA,aAAAE,EAAA8B,EAAApC,EAAA,kBAAA+B,OAAAzB,EAAA8B,EAAA,mDAAAjI,EAAAiM,KAAA,SAAAC,GAAA,IAAAC,EAAAjH,OAAAgH,GAAAD,EAAA,WAAAzG,KAAA2G,EAAAF,EAAApB,KAAArF,GAAA,OAAAyG,EAAAG,UAAA,SAAAjC,IAAA,KAAA8B,EAAA/H,QAAA,KAAAsB,EAAAyG,EAAAI,MAAA,GAAA7G,KAAA2G,EAAA,OAAAhC,EAAAzE,MAAAF,EAAA2E,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAAnK,EAAAgI,SAAAd,EAAA/B,UAAA,CAAAsG,YAAAvE,EAAA8D,MAAA,SAAAsB,GAAA,GAAA1E,KAAA2E,KAAA,EAAA3E,KAAAuC,KAAA,EAAAvC,KAAA4B,KAAA5B,KAAA6B,WAAAK,EAAAlC,KAAAgC,MAAA,EAAAhC,KAAAyB,SAAA,KAAAzB,KAAAQ,OAAA,OAAAR,KAAAN,SAAAwC,EAAAlC,KAAAgD,WAAAzC,QAAA2C,IAAAwB,EAAA,QAAA/H,KAAAqD,KAAA,MAAArD,EAAAiI,OAAA,IAAApH,EAAAmC,KAAAK,KAAArD,KAAA4G,OAAA5G,EAAAkI,MAAA,MAAA7E,KAAArD,QAAAuF,IAAA4C,KAAA,WAAA9E,KAAAgC,MAAA,MAAA+C,EAAA/E,KAAAgD,WAAA,GAAAG,WAAA,aAAA4B,EAAAhM,KAAA,MAAAgM,EAAArF,IAAA,OAAAM,KAAAgF,MAAAlD,kBAAA,SAAAmD,GAAA,GAAAjF,KAAAgC,KAAA,MAAAiD,EAAA,IAAA5F,EAAAW,KAAA,SAAAkF,EAAAC,EAAAC,GAAA,OAAAnE,EAAAlI,KAAA,QAAAkI,EAAAvB,IAAAuF,EAAA5F,EAAAkD,KAAA4C,EAAAC,IAAA/F,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAwC,KAAAkD,EAAA,QAAA5B,EAAAxD,KAAAgD,WAAA1G,OAAA,EAAAkH,GAAA,IAAAA,EAAA,KAAAb,EAAA3C,KAAAgD,WAAAQ,GAAAvC,EAAA0B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAsC,EAAA,UAAAvC,EAAAC,QAAA5C,KAAA2E,KAAA,KAAAU,EAAA7H,EAAAmC,KAAAgD,EAAA,YAAA2C,EAAA9H,EAAAmC,KAAAgD,EAAA,iBAAA0C,GAAAC,EAAA,IAAAtF,KAAA2E,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,MAAA7C,KAAA2E,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,iBAAA,GAAAuC,GAAA,GAAArF,KAAA2E,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,YAAAyC,EAAA,UAAA/D,MAAA,6CAAAvB,KAAA2E,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,gBAAAf,OAAA,SAAAhJ,EAAA2G,GAAA,QAAA8D,EAAAxD,KAAAgD,WAAA1G,OAAA,EAAAkH,GAAA,IAAAA,EAAA,KAAAb,EAAA3C,KAAAgD,WAAAQ,GAAA,GAAAb,EAAAC,QAAA5C,KAAA2E,MAAAnH,EAAAmC,KAAAgD,EAAA,eAAA3C,KAAA2E,KAAAhC,EAAAG,WAAA,KAAAyC,EAAA5C,EAAA,OAAA4C,IAAA,UAAAxM,GAAA,aAAAA,IAAAwM,EAAA3C,QAAAlD,MAAA6F,EAAAzC,aAAAyC,EAAA,UAAAtE,EAAAsE,IAAApC,WAAA,UAAAlC,EAAAlI,OAAAkI,EAAAvB,MAAA6F,GAAAvF,KAAAQ,OAAA,OAAAR,KAAAuC,KAAAgD,EAAAzC,WAAAlD,GAAAI,KAAAwF,SAAAvE,IAAAuE,SAAA,SAAAvE,EAAA8B,GAAA,aAAA9B,EAAAlI,KAAA,MAAAkI,EAAAvB,IAAA,gBAAAuB,EAAAlI,MAAA,aAAAkI,EAAAlI,KAAAiH,KAAAuC,KAAAtB,EAAAvB,IAAA,WAAAuB,EAAAlI,MAAAiH,KAAAgF,KAAAhF,KAAAN,IAAAuB,EAAAvB,IAAAM,KAAAQ,OAAA,SAAAR,KAAAuC,KAAA,kBAAAtB,EAAAlI,MAAAgK,IAAA/C,KAAAuC,KAAAQ,GAAAnD,GAAA6F,OAAA,SAAA3C,GAAA,QAAAU,EAAAxD,KAAAgD,WAAA1G,OAAA,EAAAkH,GAAA,IAAAA,EAAA,KAAAb,EAAA3C,KAAAgD,WAAAQ,GAAA,GAAAb,EAAAG,eAAA,OAAA9C,KAAAwF,SAAA7C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA/C,IAAA8F,MAAA,SAAA9C,GAAA,QAAAY,EAAAxD,KAAAgD,WAAA1G,OAAA,EAAAkH,GAAA,IAAAA,EAAA,KAAAb,EAAA3C,KAAAgD,WAAAQ,GAAA,GAAAb,EAAAC,WAAA,KAAA3B,EAAA0B,EAAAQ,WAAA,aAAAlC,EAAAlI,KAAA,KAAA4M,EAAA1E,EAAAvB,IAAAwD,EAAAP,GAAA,OAAAgD,GAAA,UAAApE,MAAA,0BAAAqE,cAAA,SAAAvC,EAAAf,EAAAE,GAAA,OAAAxC,KAAAyB,SAAA,CAAAvD,SAAAkC,EAAAiD,GAAAf,aAAAE,WAAA,SAAAxC,KAAAQ,SAAAR,KAAAN,SAAAwC,GAAAtC,IAAAxH,EAUe,SAASyN,IACpB,IAAMC,EAAgB,IAAIC,gBAAc,CACpCC,OAAQ,wDAENC,EAAS,IAAIC,YAAUJ,GAE7BxM,EAC4BC,mBAASmD,EAAgB,IAAGlD,EAAAC,YAAAH,EAAA,GAAjDsC,EAAMpC,EAAA,GAAE2M,EAAS3M,EAAA,GAKtB4M,EAEoC7M,mBAAS,IAAG8M,EAAA5M,YAAA2M,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAAAG,EACAjN,mBAAS,IAAGkN,EAAAhN,YAAA+M,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAAAG,EACUrN,mBAAS,IAAGsN,EAAApN,YAAAmN,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAAAG,EACUzN,mBAAS,WAAU0N,EAAAxN,YAAAuN,EAAA,GAA1DE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAAAG,EACE7N,oBAAS,GAAM8N,EAAA5N,YAAA2N,EAAA,GAApDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAAAG,EACMjO,oBAAS,GAAMkO,EAAAhO,YAAA+N,EAAA,GAAtDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAAAG,EACRrO,oBAAS,GAAMsO,EAAApO,YAAAmO,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAAAG,EAEQzO,oBAAS,GAAK0O,EAAAxO,YAAAuO,EAAA,GAAhCE,GAAFD,EAAA,GAAgBA,EAAA,IAE1BzP,EAAMC,YAAe,cAAe,CAAEC,UAAW,YAAjDF,EAAC2P,EAEqB5O,oBAAS,GAAM6O,EAAA3O,YAAA0O,EAAA,GAAtCnM,EAAOoM,EAAA,GAAEC,GAAUD,EAAA,GAAAE,GAEE/O,mBAAS,IAAGgP,GAAA9O,YAAA6O,GAAA,GAAjCnM,GAAMoM,GAAA,GAAEC,GAASD,GAAA,GAClBE,GAAO,eAAAzN,EAAA0N,YAAAtL,IAAA0G,KAAG,SAAA6E,IAAA,IAAAC,EAAAC,EAAAC,EAAAvE,EAAAwE,EAAA,OAAA3L,IAAAwB,KAAA,SAAAoK,GAAA,cAAAA,EAAArE,KAAAqE,EAAAzG,MAAA,OA2BgC,OA1BxCqG,EAAa,GACbC,EAAQ,GACc,OAAtBxO,IAAK4O,UAAU,IAEXH,EAAc,CAAC,8DACG,+GACA,0EAElBxB,GAAiBsB,EAAW3F,KAAK6F,EAAY,IAC7CpB,GAAkBkB,EAAW3F,KAAK6F,EAAY,IAC9ChB,GAAYc,EAAW3F,KAAK6F,EAAY,IAE5CD,EAAQ,oWAEyBnC,EAAY,+CACVI,EAAe,2CACnBR,EAAc,yBAChCY,EAAkB,yLAG3B0B,EAAWM,KAAK,KAAO,uEAET,sNAIlB3E,EAAM4E,YAAA,GAAQvN,EAAOiB,KAAI,CAAEuM,OAAQP,IAAKG,EAAAzG,KAAA,EAErB0D,EAAOoD,iBAAiB9E,GAAO,OAAhDwE,EAAQC,EAAApH,KAEdyG,IAAW,GACXG,GAAUO,EAASO,KAAKC,QAAQ,GAAGC,MAAM,wBAAAR,EAAAlE,SAAA6D,MAC5C,kBAjCY,OAAA3N,EAAAyO,MAAAzJ,KAAA0J,YAAA,GAgDb,OAFAtN,QAAQC,IAAIF,IAGRxD,IAAAC,cAAA,OAAKC,UAAU,UACO,GAAjBsD,GAAOG,QACR3D,IAAAC,cAAA,YACID,IAAAC,cAAA,UAAKJ,EAAE,UACPG,IAAAC,cAAA,aAAQJ,EAAE,iBACVG,IAAAC,cAAA,SACIG,KAAK,OACLC,YAAaR,EAAE,eACfmR,UAAQ,EACRC,SAAU,SAAClO,GAAC,OAAK6K,EAAe7K,EAAEmO,OAAO/L,UAE7CnF,IAAAC,cAAA,aAAQJ,EAAE,eACVG,IAAAC,cAAA,YACI+Q,UAAQ,EACR3Q,YAAaR,EAAE,aACfoR,SAAU,SAAClO,GAAC,OAAKiL,EAAajL,EAAEmO,OAAO/L,UAE3CnF,IAAAC,cAAA,aAAQJ,EAAE,eACVG,IAAAC,cAAA,YACI+Q,UAAQ,EACR3Q,YAAaR,EAAE,aACfoR,SAAU,SAAClO,GAAC,OAAKqL,EAAgBrL,EAAEmO,OAAO/L,UAG9CnF,IAAAC,cAAA,aAAQJ,EAAE,qBACVG,IAAAC,cAAA,UACIgR,SAAU,SAAClO,GAhGN,IAACE,EAiGFuL,EAAmBzL,EAAEmO,OAAO/L,OAhG7B,aADGlC,EAkGWF,EAAEmO,OAAO/L,QAjGZqI,EAAUzJ,EAAgB,IACrC,WAAXd,GAAqBuK,EAAUzJ,EAAgB,IACpC,aAAXd,GAAuBuK,EAAUzJ,EAAgB,MAkGzC/D,IAAAC,cAAA,UAAQkF,MAAM,WAAWtF,EAAE,uBAC3BG,IAAAC,cAAA,UAAQkF,MAAM,UAAUtF,EAAE,uBAC1BG,IAAAC,cAAA,UAAQkF,MAAM,YAAYtF,EAAE,wBAEhCG,IAAAC,cAAA,aAAQJ,EAAE,eACVG,IAAAC,cAAA,OAAKC,UAAU,iBACXF,IAAAC,cAAA,SAAOC,UAAU,aAAaL,EAAE,kBAC5BG,IAAAC,cAAA,SACIG,KAAK,WACL6Q,SAAU,SAAClO,GACP6L,GAAmBD,GAEN,IAAb5L,EAAEY,OAAe4L,GAAe,GAAQA,GAAe,MAG/DvP,IAAAC,cAAA,QAAMC,UAAU,eAEpBF,IAAAC,cAAA,SAAOC,UAAU,aAAaL,EAAE,mBAC5BG,IAAAC,cAAA,SACIG,KAAK,WACL6Q,SAAU,SAAClO,GACPiM,GAAoBD,GAEP,IAAbhM,EAAEY,QAA6B,IAAbZ,EAAEY,OAAe4L,GAAe,GAAQA,GAAe,MAGjFvP,IAAAC,cAAA,QAAMC,UAAU,eAEpBF,IAAAC,cAAA,SAAOC,UAAU,aAAaL,EAAE,aAC5BG,IAAAC,cAAA,SACIG,KAAK,WACL6Q,SAAU,SAAClO,GACPqM,GAAcD,GAED,IAAbpM,EAAEY,OAAe4L,GAAe,GAAQA,GAAe,MAG/DvP,IAAAC,cAAA,QAAMC,UAAU,iBAK5BF,IAAAC,cAAA,OAAKC,UAAU,WACQ,IAAlBsD,GAAOG,QACR3D,IAAAC,cAACmD,EAAa,CAACC,QAASA,EAAS/B,QAAS,WACtCoO,IAAW,GACXI,QAGHtM,GAAOG,OAAS,GACb3D,IAAAC,cAACkR,IAAM,CAACjR,UAAU,cAAcoB,QA/F7B,WACfsM,EAAe,IACfI,EAAa,IACbI,EAAgB,IAChBI,EAAmB,WACnBI,GAAkB,GAClBI,GAAmB,GACnBI,GAAa,GACbS,GAAU,MAuFuD,UAK7D7P,IAAAC,cAACmR,EAAQ,CAAC5N,OAAQA,MC5Jf6N,MAdf,SAAgBhP,GAA0B,IAAxBC,EAAQD,EAARC,SAAUC,EAAWF,EAAXE,YAExB,OACIvC,IAAAC,cAAA,WACID,IAAAC,cAACkD,EAAW,CAACb,SAAUA,EAAUC,YAAaA,EAAa+O,OAAO,QAClEtR,IAAAC,cAACQ,EAAM,CACHgB,YAAa,IAEjBzB,IAAAC,cAACiN,EAAgB,kCC8CdqE,MAtDf,WAAqB,IAAA5Q,EACiBC,mBAAS,GAAEC,EAAAC,YAAAH,EAAA,GAAtC6Q,EAAS3Q,EAAA,GAAE4Q,EAAY5Q,EAAA,GAEtBhB,EAAMC,YAAe,cAAe,CAAEC,UAAW,UAAjDF,EAER,OACIG,IAAAC,cAACyR,WAAQ,KACL1R,IAAAC,cAAA,WAASC,UAAU,SACfF,IAAAC,cAAA,OAAKC,UAAU,OACXF,IAAAC,cAAA,OAAKC,UAAU,UACXF,IAAAC,cAAA,OAAKC,UAAU,iBACXF,IAAAC,cAAA,OAAKK,IAAKqR,IAAWzR,UAAU,YAAYM,IAAI,OAGvDR,IAAAC,cAAA,OAAKC,UAAU,WAEXF,IAAAC,cAAA,OAAKC,UAAU,QACXF,IAAAC,cAAA,OAAKC,UAAyB,IAAdsR,EAAkB,oBAAsB,aAAclQ,QAAS,kBAAMmQ,EAAa,KAC9FzR,IAAAC,cAAA,UAAKJ,EAAE,iBAEXG,IAAAC,cAAA,OAAKC,UAAyB,IAAdsR,EAAkB,oBAAsB,aAAclQ,QAAS,kBAAMmQ,EAAa,KAC9FzR,IAAAC,cAAA,UAAKJ,EAAE,gBAEXG,IAAAC,cAAA,OAAKC,UAAyB,IAAdsR,EAAkB,oBAAsB,aAAclQ,QAAS,kBAAMmQ,EAAa,KAC9FzR,IAAAC,cAAA,UAAKJ,EAAE,qBAIfG,IAAAC,cAAA,OAAKC,UAAU,eACXF,IAAAC,cAAA,OAAKC,UAAyB,IAAdsR,EAAkB,iBAAmB,UAAWlQ,QAAS,kBAAMmQ,EAAa,KACxFzR,IAAAC,cAAA,SAAIJ,EAAE,iBAKdG,IAAAC,cAAA,OAAKC,UAAU,eACXF,IAAAC,cAAA,OAAKC,UAAyB,IAAdsR,EAAkB,iBAAmB,UAAWlQ,QAAS,kBAAMmQ,EAAa,KACxFzR,IAAAC,cAAA,SAAIJ,EAAE,gBAIdG,IAAAC,cAAA,OAAKC,UAAU,eACXF,IAAAC,cAAA,OAAKC,UAAyB,IAAdsR,EAAkB,iBAAmB,UAAWlQ,QAAS,kBAAMmQ,EAAa,KACxFzR,IAAAC,cAAA,SAAIJ,EAAE,yBC9BvB+R,MAbf,SAAcvP,GAA0B,IAAxBC,EAAQD,EAARC,SAAUC,EAAWF,EAAXE,YAEtB,OACIvC,IAAAC,cAAA,WACID,IAAAC,cAACkD,EAAW,CAACb,SAAUA,EAAUC,YAAaA,IAC9CvC,IAAAC,cAACQ,EAAM,CACHgB,YAAa,IAEjBzB,IAAAC,cAACsR,EAAS,QCePM,MAhBf,WAAe,IAAAlR,EACqBC,mBAAS,WAAUC,EAAAC,YAAAH,EAAA,GAA5C2B,EAAQzB,EAAA,GAAE0B,EAAW1B,EAAA,GAE5B,OACIb,IAAAC,cAAA,WACID,IAAAC,cAAC6R,IAAM,KACH9R,IAAAC,cAAC8R,IAAM,KACH/R,IAAAC,cAAC+R,IAAK,CAACC,KAAK,IAAIC,QAASlS,IAAAC,cAACiD,EAAI,CAACZ,SAAUA,EAAUC,YAAaA,MAChEvC,IAAAC,cAAC+R,IAAK,CAACC,KAAK,WAAWC,QAASlS,IAAAC,cAACoR,EAAO,CAAC/O,SAAUA,EAAUC,YAAaA,MAC1EvC,IAAAC,cAAC+R,IAAK,CAACC,KAAK,SAASC,QAASlS,IAAAC,cAAC2R,EAAK,CAACtP,SAAUA,EAAUC,YAAaA,wBCTtE4P,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DCPnCC,IAASC,OACLzS,IAAAC,cAACyS,WAAQ,CAACC,SAAW3S,IAAAC,cAAA,WAAK,gBACtBD,IAAAC,cAAC4R,EAAG,OAENe,SAASC,eAAe,SDiHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxK,KAAK,SAACyK,GACLA,EAAaC,eAEdnG,MAAM,SAACrE,GACNjF,QAAQiF,MAAMA,EAAMyK,+BErI5B3T,EAAAC,QAAiBC,EAAAC,EAAuB,8ECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.31df231b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Gilroy-Bold.b381c2ab.ttf\";","import React from \"react\"\nimport headerLogo from \"../images/homegood.png\"\nimport style from \"../css/Home.css\"\nimport { useTranslation } from 'react-i18next'\n\n\nexport default function MainContent() {\n    const { t } = useTranslation('translation', { keyPrefix: 'Home' });\n    \n    return (\n        <section className='about'>\n            <div className='row'>\n                <div className='column-text'>\n                    <div className='tab-content'>\n                        <h2 className=\"item1\">{t('Moto')}</h2>\n                        <p className=\"item2\">{t('Description')}</p>\n                    </div>\n                    <div class=\"item4\">\n                        <form className=\"form\">\n                            <input\n                                type=\"text\"\n                                placeholder={t('Email')}\n                                className=\"form--input\"\n                            />\n                            <button className=\"form--button\">\n                                {t('Button')}\n                            </button>\n                        </form>\n                    </div>\n                    <div class=\"item5\">{t('Notice')}</div>\n                </div>\n                <div className='column'>\n                    <div className='home-image'>\n                        <img src={headerLogo} className='about-img' alt=\"\"></img>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}","import React, { useState } from \"react\"\nimport styles from \"../css/NavBarStyles.css\"\nimport { Link } from \"react-router-dom\";\nimport logo from \"../images/logo2.png\" \nimport { useTranslation } from 'react-i18next'\n\nfunction NavBar(props) {\n    const { t } = useTranslation('translation', { keyPrefix: 'Nav' });\n\n    const [ toggleNav, setToggleNav ] = useState(false)\n    \n        return(\n            <div>\n                <nav className={styles.nav}>\n                    <a href=\"/\">\n                        <img id=\"logo-img\" src={logo} alt=\"\"/>\n                    </a>\n                    <div>\n                        <ul id=\"navbar\" className={toggleNav ? \"#navbar active\" : \"#navbar\"} onClick={ () => setToggleNav(!toggleNav)}>\n                            <li><Link to=\"/\" className={props.navLocation === 1 ? \"active\" : \"header-item\"}>{t('Home')}</Link></li>\n                            <li><Link to=\"/product\" className={props.navLocation === 2 ? \"active\" : \"header-item\"} >{t('Product')}</Link></li>\n                            <li><Link to=\"/about\" className={props.navLocation === 3 ? \"active\" : \"header-item\"} >{t('About')}</Link></li>\n                        </ul>\n                    </div>\n                    <div id=\"mobile\" onClick={ () => setToggleNav(!toggleNav)}>\n                        <i id=\"bar\" className={toggleNav ? 'fas fa-times' : 'fas fa-bars'}></i>\n                    </div>\n                </nav>\n            </div>\n        )\n    }\n\n\nexport default NavBar;","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// don't want to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\n\ni18n\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-http-backend\n  // want your translations to be loaded from a professional CDN? => https://github.com/locize/react-tutorial#step-2---use-the-locize-cdn\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: 'en',\n    debug: true,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;","import React, { useState } from \"react\"\nimport headerLogo from \"../images/world.png\"\nimport { useTranslation } from 'react-i18next'\nimport i18n from '../i18n.js'\n\n\nexport default function LanguageTopHeader({selected, setSelected}) {\n    const { t} = useTranslation('translation', { keyPrefix: 'Nav.LanguageBar' });\n\n    const [isActive, setIsActive] = useState(false);\n    const options = [t('English'), t('Lithuanian')]\n\n    function handleLanguage(lang) {\n        i18n.changeLanguage(lang);\n        options.foo = [t('English'), t('Lithuanian')]\n    }\n\n    return (\n        <div className=\"language-nav\">\n            <div className=\"dropdown\">\n                <div className=\"dropdown-btn\" onClick={(e) => setIsActive(!isActive)}>\n                    <img className=\"btnimg\" src={headerLogo} alt=\"\" />\n                    <div className=\"text-arrow\">\n                        {t(selected)}\n                        <i className=\"fa-solid fa-caret-down\"></i>\n                    </div>\n                </div>\n                {isActive && (\n                    <div className=\"dropdown-content\">\n                        {options.map((option) => (\n                            <div onClick={(e) => {\n                                setIsActive(false)\n                                setSelected(option) \n                                option === 'English' || option === 'Anglų' ? handleLanguage('en') : handleLanguage('lt')\n                            }\n                        }className=\"dropdown-item\">\n                        {option} \n                    </div>\n                    ))}\n                </div>\n                )}\n            </div>\n        </div>\n        \n    );\n}","import React from 'react'\nimport MainContent from \"../components/MainContent\"\nimport NavBar from \"../components/NavBar\";\nimport LanguageBar from \"../components/LanguageTopHeader\"\n\nfunction Home({selected, setSelected}) {\n    \n    return (\n            <div>\n                <LanguageBar selected={selected} setSelected={setSelected}/>\n                <NavBar \n                    navLocation={1}\n                />\n                <MainContent />\n            </div>\n    )\n}\n\nexport default Home;","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport Spinner from './spinner.gif';\n\nconst LoadingButton = ({ loading, onClick }) => {\n    const { t } = useTranslation('translation', { keyPrefix: 'Product' });\n    \n    return (\n        <button onClick={onClick} className='loading-spinner-button'>\n            {\n                loading ? <img src={Spinner} alt='spinner' /> : t('Button')  + ' '\n            }\n        </button>\n    )\n}\n\nexport default LoadingButton;","import React from 'react'\n\nexport default function Translation({ result }) {\n    console.log(result)\n    return (\n        <div>\n            {result.length > 0 &&\n                <textarea\n                    className=\"text-area\"\n                    cols={50}\n                    rows={15}\n                    autoFocus\n                >{result.length > 0 ? result : \"\"}</textarea>\n            }\n        </div>\n    )\n}","export const arrayStrictness = [\r\n    {\r\n      name: \"Neutral\",\r\n      id: \"neutral\",\r\n      description: \"Answer questions based on existing knowledge\",\r\n      form: {\r\n        model: \"text-davinci-003\",\r\n        temperature: 0,\r\n        max_tokens: 1000,\r\n        top_p: 1.0,\r\n        frequency_penalty: 0.0,\r\n        presence_penalty: 0.0,\r\n      },\r\n    },\r\n    {\r\n      name: \"Strict\",\r\n      id: \"strict\",\r\n      description: \"Corrects sentences into standard English.\",\r\n      form: {\r\n        model: \"text-davinci-003\",\r\n        temperature: 0,\r\n        max_tokens: 1000,\r\n        top_p: 1.0,\r\n        frequency_penalty: 0.0,\r\n        presence_penalty: 0.0,\r\n      },\r\n    },\r\n    {\r\n      name: \"Friendly\",\r\n      id: \"friendly\",\r\n      description: \"Translates difficult text into simpler concepts.\",\r\n      form: {\r\n        model: \"text-davinci-003\",\r\n        temperature: 0,\r\n        max_tokens: 1000,\r\n        top_p: 1.0,\r\n        frequency_penalty: 0.0,\r\n        presence_penalty: 0.0,\r\n      },\r\n    },\r\n];","import React, { useState } from \"react\"\nimport styles from \"../css/ProductUserForms.css\"\nimport { useTranslation } from 'react-i18next'\nimport LoadingButton from \"./LoadingButton\"\nimport Callback from './Callback.js'\n\nimport { Configuration, OpenAIApi } from \"openai\";\nimport { arrayStrictness } from \"../AIOptions/index.js\";\nimport { Button } from \"@mui/material\"\nimport i18n from 'i18next';\n\nexport default function ProductUserInput() {\n    const configuration = new Configuration({\n        apiKey: \"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\",\n    });\n    const openai = new OpenAIApi(configuration);\n\n    // which pattern to use \n    const [option, setOption] = useState(arrayStrictness[0]);\n    const selectOption = (option) => {\n        if (option === 'Neutral') setOption(arrayStrictness[0])\n        if (option === 'Strict') setOption(arrayStrictness[1])\n        if (option === 'Friendly') setOption(arrayStrictness[2])\n    };\n\n    const [motiveInput, setMotiveInput] = useState('')\n    const [pastInput, setPastInput] = useState('')\n    const [currentInput, setCurrentInput] = useState('')\n    const [strictnessInput, setStrictnessInput] = useState('Neutral')\n    const [situationCheck, setSituationCheck] = useState(false)\n    const [psychologyCheck, setPsychologyCheck] = useState(false)\n    const [planCheck, setPlanCheck] = useState(false)\n\n    const [isInputFull, setIsInputFull] = useState(true)\n\n    const { t } = useTranslation('translation', { keyPrefix: 'Product' });\n\n    const [loading, setLoading] = useState(false)\n\n    const [result, setResult] = useState(\"\")\n    const doStuff = async () => {\n        let finalTypes = []\n        let input = \"\"\n        if (i18n.languages[0] === 'en') {\n            \n            let outputTypes = ['Solution to problems and how teacher and parents could help'\n                                , 'also suggest some psychological trick that could be helpful for teacher or parents to deal with his problems'\n                                , 'write small discussion plan how to present this information to parents']\n            \n            if (situationCheck) {finalTypes.push(outputTypes[0])}\n            if (psychologyCheck) {finalTypes.push(outputTypes[1])}\n            if (planCheck) {finalTypes.push(outputTypes[2])}\n\n            input = \"You are very intelligent, qualified and accountable teacher, who reads psychology literature and is keen of applying it to his analysis on students development \\\n            report. You have to write a small summary for parents about their child in elementary school at the end of year. You have this information: \\\n            In the past, student was - : \" + pastInput + \" \\\n            This semester, student was - : \" + currentInput + \" \\\n            Writing style should be as \" + motiveInput + \" \\\n            Emotion: \" + strictnessInput + \" \\\n            Write small summary of information about student given above, \\\n            More over, write small discussion plan how to present this information to parents. \\\n            \" + finalTypes.join(',') + \". Style, where needed, use bullet points to make more clear message\"\n        } else {\n            let outputTypes = \"translate this text to english, and keep english words as it was, only translate that are lithuanian. \\\n            Also, exclude lithuanian words. In the final output give me only the sentence I want to translate\"\n            }\n        \n        let object = { ...option.form, prompt: input };\n       \n        const response = await openai.createCompletion(object);\n\n        setLoading(false)\n        setResult(response.data.choices[0].text);\n    };\n\n    const resetInput = () => {\n        setMotiveInput(\"\")\n        setPastInput(\"\")\n        setCurrentInput(\"\")\n        setStrictnessInput(\"Neutral\")\n        setSituationCheck(false)\n        setPsychologyCheck(false)\n        setPlanCheck(false)\n        setResult(\"\")\n    }\n\n    console.log(result)\n\n    return (\n        <div className=\"create\">\n            {result.length == 0 && \n            <from>\n                <h2>{t('Title')}</h2>\n                <label>{t('Motive.Title')}</label>\n                <input\n                    type=\"text\"\n                    placeholder={t('Motive.Hint')}\n                    required\n                    onChange={(e) => setMotiveInput(e.target.value)}\n                />\n                <label>{t('Past.Title')}</label>\n                <textarea\n                    required\n                    placeholder={t('Past.Hint')}\n                    onChange={(e) => setPastInput(e.target.value)}\n                />\n                <label>{t('Clue.Title')}</label>\n                <textarea\n                    required\n                    placeholder={t('Clue.Hint')}\n                    onChange={(e) => setCurrentInput(e.target.value)}\n                />\n\n                <label>{t('Strictness.Title')}</label>\n                <select\n                    onChange={(e) => {\n                        setStrictnessInput(e.target.value)\n                        selectOption(e.target.value)\n                    }}\n                >\n                    <option value=\"Neutral\">{t('Strictness.Option1')}</option>\n                    <option value=\"Strict\">{t('Strictness.Option2')}</option>\n                    <option value=\"Friendly\">{t('Strictness.Option3')}</option>\n                </select>\n                <label>{t('Info.Title')}</label>\n                <div className=\"checkbox-grid\">\n                    <label className=\"container\">{t('Info.Solutions')}\n                        <input\n                            type=\"checkbox\"\n                            onChange={(e) => {\n                                setSituationCheck(!situationCheck)\n                                // check if data input is > 0\n                                e.length === 0 ? setIsInputFull(true) : setIsInputFull(false)\n                            }}\n                        />\n                        <span className=\"checkmark\"></span>\n                    </label>\n                    <label className=\"container\">{t('Info.Suggestion')}\n                        <input\n                            type=\"checkbox\"\n                            onChange={(e) => {\n                                setPsychologyCheck(!psychologyCheck)\n                                // check if data input is > 0\n                                e.length === 0 && e.length === 0 ? setIsInputFull(true) : setIsInputFull(false)\n                            }}\n                        />\n                        <span className=\"checkmark\"></span>\n                    </label>\n                    <label className=\"container\">{t('Info.Plan')}\n                        <input\n                            type=\"checkbox\"\n                            onChange={(e) => {\n                                setPlanCheck(!planCheck)\n                                // check if data input is > 0\n                                e.length === 0 ? setIsInputFull(true) : setIsInputFull(false)\n                            }}\n                        />\n                        <span className=\"checkmark\"></span>\n                    </label>\n                </div>\n            </from>\n            }\n            <div className='buttons'>\n                {result.length === 0 &&                \n                <LoadingButton loading={loading} onClick={() => {\n                    setLoading(true)\n                    doStuff()\n                }} />\n                }\n                {result.length > 0 &&\n                    <Button className=\"resetButton\" onClick={resetInput}>\n                        Clear\n                    </Button>\n                }\n            </div>\n            <Callback result={result} />\n        </div>\n    )\n}","import React from 'react'\nimport ProductUserInput from '../components/ProductUserInput'\nimport NavBar from \"../components/NavBar\";\nimport LanguageBar from \"../components/LanguageTopHeader\"\n\nfunction Product({selected, setSelected}) {\n    \n    return (\n        <div>\n            <LanguageBar selected={selected} setSelected={setSelected} sticky=\"top\"/>\n            <NavBar \n                navLocation={2}\n            />\n            <ProductUserInput />\n            \n        </div>\n    )\n}\n\nexport default Product;","import React, { Fragment, useState } from 'react'\nimport styles from \"../css/About.css\"\nimport mainImage from \"../images/about-1.jpg\"\nimport { useTranslation } from 'react-i18next'\n\nfunction AboutBody() {\n    const [toggleTab, setToggleTab] = useState(2)\n\n    const { t } = useTranslation('translation', { keyPrefix: 'About' });\n\n    return (\n        <Fragment>\n            <section className='about'>\n                <div className='row'>\n                    <div className='column'>\n                        <div className='about-img-div'>\n                            <img src={mainImage} className='about-img' alt=\"\"></img>\n                        </div>\n                    </div>\n                    <div className='column2'>\n\n                        <div className='tabs'>\n                            <div className={toggleTab === 1 ? 'single-tab-active' : 'single-tab'} onClick={() => setToggleTab(1)}>\n                                <h2>{t('About.Title')}</h2>\n                            </div>\n                            <div className={toggleTab === 2 ? 'single-tab-active' : 'single-tab'} onClick={() => setToggleTab(2)}>\n                                <h2>{t('Idea.Title')}</h2>\n                            </div>\n                            <div className={toggleTab === 3 ? 'single-tab-active' : 'single-tab'} onClick={() => setToggleTab(3)}>\n                                <h2>{t('Contacts.Title')}</h2>\n                            </div>\n                        </div>\n\n                        <div className='tab-content'>\n                            <div className={toggleTab === 1 ? 'content active' : 'content'} onClick={() => setToggleTab(1)}>\n                                <p>{t('About.Text')}\n                                </p>\n                            </div>\n                        </div>\n\n                        <div className='tab-content'>\n                            <div className={toggleTab === 2 ? 'content active' : 'content'} onClick={() => setToggleTab(2)}>\n                                <p>{t('Idea.Text')}</p>\n                            </div>\n                        </div>\n\n                        <div className='tab-content'>\n                            <div className={toggleTab === 3 ? 'content active' : 'content'} onClick={() => setToggleTab(3)}>\n                                <p>{t('Contacts.Text')}</p>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </section>\n        </Fragment>\n    )\n}\n\nexport default AboutBody;","import React from 'react'\nimport NavBar from \"../components/NavBar\";\nimport AboutBody from \"../components/AboutBody\"\nimport LanguageBar from \"../components/LanguageTopHeader\"\n\nfunction About({selected, setSelected}) {\n    \n    return (\n        <div>\n            <LanguageBar selected={selected} setSelected={setSelected}/>\n            <NavBar \n                navLocation={3}\n            />\n            <AboutBody/>\n        </div>\n    )\n}\n\nexport default About;","import React, { useState } from \"react\"\nimport {\n    BrowserRouter as Router,\n    Routes,\n    Route,\n  } from \"react-router-dom\";\n\nimport Home from '../pages/Home'\nimport Product from '../pages/Product'\nimport About from '../pages/About'\n\n\nfunction App() {\n    const [selected, setSelected] = useState(\"English\")\n\n    return (\n        <div>\n            <Router>\n                <Routes>\n                    <Route path=\"/\" element={<Home selected={selected} setSelected={setSelected}/>} />\n                    <Route path=\"/product\" element={<Product selected={selected} setSelected={setSelected}/>}/>\n                    <Route path=\"/about\" element={<About selected={selected} setSelected={setSelected}/>}/>\n                </Routes>\n            </Router>\n        </div>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Suspense } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./components/App\"\nimport \"./style.css\"\nimport './fonts/Gilroy-Bold.ttf';\n\nimport './i18n.js'\n\nimport * as ServiceWorker from './serviceWorkerRegistration';\n\nReactDOM.render(\n    <Suspense fallback={(<div>Loading ~~~</div>)}>\n        <App />\n    </Suspense>\n    , document.getElementById(\"root\"));\nServiceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/homegood.e08cb425.png\";","module.exports = __webpack_public_path__ + \"static/media/logo2.8d64291e.png\";","module.exports = __webpack_public_path__ + \"static/media/world.b8443796.png\";","module.exports = __webpack_public_path__ + \"static/media/spinner.0394ee0e.gif\";","module.exports = __webpack_public_path__ + \"static/media/about-1.3b3ad3e3.jpg\";"],"sourceRoot":""}